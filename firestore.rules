rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper functions
    function isOwner(organizationId) {
      return request.auth.token.role == 'owner' && request.auth.token.organizationId == organizationId;
    }
    
    function isCoach(organizationId) {
      return request.auth.token.role == 'coach' && request.auth.token.organizationId == organizationId;
    }
    
    function isAssignedToStadium(stadiumId) {
      // Check if the coach's UID is in the assignedStadiums array in their user profile
      return request.auth.uid in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.assignedStadiums;
    }

    // Organizations: Owners can read their own organization document
    match /organizations/{orgId} {
      allow read: if isOwner(orgId);
      allow write: if isOwner(orgId);
    }

    // Users: Users can read/update their own profile. Owners can read profiles in their org.
    match /users/{userId} {
      allow read, update: if request.auth.uid == userId;
      allow read: if isOwner(resource.data.organizationId);
      // Create is handled by the cloud function
      allow create: if true; 
    }

    // Stadiums: Owners can manage stadiums within their organization
    match /stadiums/{stadiumId} {
      allow read, write, delete: if isOwner(resource.data.organizationId);
      
      // Coaches can read the stadium they are assigned to
      allow get: if isCoach(resource.data.organizationId) && isAssignedToStadium(stadiumId);
    }
    
    // Nested Collections under Stadiums
    match /stadiums/{stadiumId} {
    
        // Students: Coaches can manage students in their assigned stadium.
        match /students/{studentId} {
            allow read, create, update, delete: if isCoach(get(/databases/$(database)/documents/stadiums/$(stadiumId)).data.organizationId) 
                                               && isAssignedToStadium(stadiumId);
            // Owners can also read students in their org's stadiums
            allow read: if isOwner(get(/databases/$(database)/documents/stadiums/$(stadiumId)).data.organizationId);
        }
        
        // Attendance: Coaches can manage attendance in their assigned stadium.
        match /attendance/{attendanceId} {
            allow read, create, update, delete: if isCoach(get(/databases/$(database)/documents/stadiums/$(stadiumId)).data.organizationId) 
                                               && isAssignedToStadium(stadiumId);
            // Owners can read attendance
            allow read: if isOwner(get(/databases/$(database)/documents/stadiums/$(stadiumId)).data.organizationId);
        }
    }
  }
}
