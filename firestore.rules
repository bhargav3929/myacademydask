
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read and write their own user document
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow authenticated users to create new organizations
    match /organizations/{orgId} {
      allow create: if request.auth != null;
      // Only the owner can read/update the organization
      allow read, update: if request.auth != null && request.auth.uid == resource.data.ownerId;
    }

    // Stadiums can be managed by the organization owner
    match /stadiums/{stadiumId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/organizations/$(request.resource.data.organizationId)).data.ownerId == request.auth.uid;
    }

    // Students can be managed by the organization owner
     match /students/{studentId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/organizations/$(request.resource.data.organizationId)).data.ownerId == request.auth.uid;
    }

    // Attendance can be marked by an assigned coach or managed by the owner
    match /attendance/{attendanceId} {
        allow read, write: if request.auth != null && 
          (
            // Coach can write
            exists(/databases/$(database)/documents/users/$(request.auth.uid)) && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coach' && request.resource.data.stadiumId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.assignedStadiums
          ) || (
            // Owner can write
            exists(/databases/$(database)/documents/organizations/$(request.resource.data.organizationId)) && get(/databases/$(database)/documents/organizations/$(request.resource.data.organizationId)).data.ownerId == request.auth.uid
          );
    }
  }
}
