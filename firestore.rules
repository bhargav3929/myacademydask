rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Allow user creation only for the authenticated user setting themselves as owner.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // During sign-up, a user can create their own document
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Allow organization creation only by the user who will be the owner.
    match /organizations/{orgId} {
      allow read, write: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
      
      // Allow creation if the new org's ownerId is the person making the request
      allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
    }

    // Stadiums can be read/written by the owner of the organization
    match /stadiums/{stadiumId} {
      allow read, write: if request.auth != null && get(/databases/$(database)/documents/organizations/$(request.resource.data.organizationId)).data.ownerId == request.auth.uid;
    }
    
    // Students can be managed by the owner of the organization
    match /students/{studentId} {
        allow read, write: if request.auth != null && get(/databases/$(database)/documents/organizations/$(request.resource.data.organizationId)).data.ownerId == request.auth.uid;
    }

    // Attendance can be managed by any authenticated user within the organization
    match /attendance/{attendanceId} {
       allow read, write: if request.auth != null;
    }
  }
}