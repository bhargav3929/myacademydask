
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isOwnerOfOrg(orgId) {
      return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationId == orgId;
    }

    function isCoachInOrg(orgId) {
       return request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organizationId == orgId && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'coach';
    }
    
    function isSuperAdmin() {
      // In a real app, you would set a custom claim on the user's token.
      // For this demo, we can check a field in a super_admin_users collection.
      return request.auth != null && exists(/databases/$(database)/documents/super_admin_users/$(request.auth.uid));
    }


    // App Data Collections
    match /stadiums/{stadiumId} {
      allow read, write: if isOwnerOfOrg(resource.data.organizationId);
      
      match /students/{studentId} {
        allow read: if isOwnerOfOrg(resource.data.organizationId) || isCoachInOrg(resource.data.organizationId);
        allow create, update, delete: if isOwnerOfOrg(request.resource.data.organizationId) || isCoachInOrg(request.resource.data.organizationId);
      }

      match /attendance/{attendanceId} {
         allow read: if isOwnerOfOrg(resource.data.organizationId) || isCoachInOrg(resource.data.organizationId);
         allow create: if isCoachInOrg(request.resource.data.organizationId);
      }
    }

    // This allows a collectionGroup query on "students" but only if the user is part of the organization
    match /{path=**}/students/{studentId} {
       allow read: if isOwnerOfOrg(get(/databases/$(database)/documents/$(path)).data.organizationId);
    }
    
     // This allows a collectionGroup query on "attendance" but only if the user is part of the organization
    match /{path=**}/attendance/{attendanceId} {
       allow read: if isOwnerOfOrg(get(/databases/$(database)/documents/$(path)).data.organizationId);
    }
    
    match /attendance_submissions/{submissionId} {
        allow read: if isOwnerOfOrg(resource.data.organizationId);
        allow create: if isCoachInOrg(request.resource.data.organizationId);
    }

    // User and Organization Management
    match /users/{userId} {
      // Any authenticated user can create their own user document (for signup)
      allow create: if request.auth != null && request.auth.uid == userId;
      // Users can read/update their own profile. Owners can read any user in their org.
      allow read, update: if request.auth.uid == userId || isOwnerOfOrg(get(/databases/$(database)/documents/users/$(userId)).data.organizationId);
    }

    match /organizations/{orgId} {
        allow read, update: if isOwnerOfOrg(orgId);
    }


    // Super Admin Collections
    match /stadium_owners/{ownerId} {
      allow read, create, update: if isSuperAdmin();
    }

    match /super_admin_users/{adminId} {
      allow read: if isSuperAdmin();
      allow create, update: if isSuperAdmin() && request.auth.uid == adminId;
    }
  }
}
